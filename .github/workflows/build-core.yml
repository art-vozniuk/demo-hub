name: build and push core

on:
  workflow_dispatch:
  workflow_call:

jobs:
  lint:
    uses: ./.github/workflows/lint-python.yml

  test:
    uses: ./.github/workflows/test-core.yml

  build-and-push:
    needs: [lint, test]
    if: ${{ success() }}
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: create env file
        run: |
          cat > /tmp/core.env << EOF
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          ENV=${{ secrets.ENV }}
          SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }}
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          RABBITMQ_URL=amqp://${{ secrets.RABBITMQ_USER }}:${{ secrets.RABBITMQ_PASSWORD }}@rabbitmq:5672/
          REDIS_URL=redis://redis:6379
          S3_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
          S3_ACCESS_KEY_SECRET=${{ secrets.S3_ACCESS_KEY_SECRET }}
          S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}
          S3_PUBLIC_BUCKETS_ENDPOINT=${{ secrets.S3_PUBLIC_BUCKETS_ENDPOINT }}
          S3_REGION=${{ secrets.S3_REGION }}
          TEST_USER_EMAIL=${{ secrets.TEST_USER_EMAIL }}
          EOF

      - name: login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: build and push docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: services/core/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/core:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secret-files: |
            env=/tmp/core.env